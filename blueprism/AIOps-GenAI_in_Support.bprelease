<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>AIOps-GenAI_in_Support</bpr:name>
    <bpr:release-notes />
    <bpr:created>2024-02-24 09:47:54Z</bpr:created>
    <bpr:package-id>-1</bpr:package-id>
    <bpr:package-name>&lt;Adhoc Package&gt;</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="8">
        <process id="784a202d-bcd7-4825-a7f3-76799f611611" name="CreateExceptionsInQueue" xmlns="http://www.blueprism.co.uk/product/process"><process name="CreateExceptionsInQueue" version="1.0" bpversion="7.3.0.5589" narrative="Sample process to create exceptions for demo" byrefcollection="true" processrunningmessage=""><view><camerax>-46</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><stage stageid="31eb71fb-458b-435f-8ac6-46de2d286d97" name="Start" type="Start"><display x="15" y="-105" /><onsuccess>19376be5-2855-403a-9580-49e19312643e</onsuccess></stage><stage stageid="cbeab5d4-d249-4115-91f8-52282a0756b3" name="End" type="End"><display x="15" y="75" /></stage><stage stageid="07653c88-fc48-4005-a9a6-cb4aba294b2f" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5b4220b7-c6e8-4b48-a26e-e899c59a9546" name="Queue Items" type="Collection"><display x="-150" y="15" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="id" type="number" /><field name="name" type="text" /><field name="exception" type="text" /></collectioninfo><initialvalue><row><field name="id" type="number" value="1" /><field name="name" type="text" value="Ashish" /><field name="exception" type="text" value="Remote Exception R0045 : External Web service is busy, please try after sometime" /></row><row><field name="id" type="number" value="2" /><field name="name" type="text" value="BP" /><field name="exception" type="text" value="Remote Exception R103 : SAP Hana is down for maintenance environment will be available after 2am UTC" /></row><row><field name="id" type="number" value="3" /><field name="name" type="text" value="SSNC" /><field name="exception" type="text" value="Business Exception B121: Name mismatch in account payable" /></row><row><field name="id" type="number" value="4" /><field name="name" type="text" value="BP Finance" /><field name="exception" type="text" value="System Exception S0012: ERROR: Internal : Failed to perform step 1 in Navigate Stage 'Navigate1' on page 'attach' - Target application could not be identified, please ensure the application is running and review the following action inputs and/or application model identifiers: WindowTitle, ProcessName" /></row></initialvalue></stage><stage stageid="19376be5-2855-403a-9580-49e19312643e" name="add dummy data to collection" type="Action"><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="150" y="-105" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[Queue Name]" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Queue Items]" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr=""><validator type="BluePrism.AutomateProcessCore.RangeParameterValidation" parameter="0:25000" /></input></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="Item IDs" /></outputs><onsuccess>88c725e8-40fa-44d0-9f83-4d67d2d43e29</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="b8a6b012-7dd5-4437-a309-45a27f18f9a8" name="Queue Name" type="Data"><loginhibit onsuccess="true" /><display x="-210" y="-30" /><datatype>text</datatype><initialvalue xml:space="preserve">ExceptionTestQueue</initialvalue><private /><alwaysinit /></stage><stage stageid="7a0b13bd-f5fa-4897-880d-bb06221fe419" name="Item IDs" type="Collection"><display x="-270" y="15" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item ID" type="text" description="The Item ID of the work queue item" displayname="Item IDs" /></collectioninfo></stage><stage stageid="88c725e8-40fa-44d0-9f83-4d67d2d43e29" name="Get Dummy Data to mark as exception" type="Action"><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="15" y="-45" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue" expr="[Queue Name]" /><input type="text" name="Key Filter" friendlyname="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" friendlyname="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" friendlyname="Data" narrative="The data associated with the item - a single collection row." stage="Item Data" /><output type="text" name="Status" friendlyname="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" friendlyname="Attempts" narrative="The number of attempts already made to work this item." stage="" /></outputs><onsuccess>a4055085-de1a-4752-b055-f84a6afee9ff</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="a4055085-de1a-4752-b055-f84a6afee9ff" name="Got item?" type="Decision"><display x="150" y="75" /><decision expression="[Item ID]&lt;&gt;&quot;&quot;" /><ontrue>370586a9-c8e6-4c21-b1fa-75e76b8ddef2</ontrue><onfalse>cbeab5d4-d249-4115-91f8-52282a0756b3</onfalse></stage><stage stageid="93226796-0c6d-4697-b827-d8c918aaa9e3" name="Item ID" type="Data"><display x="240" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="370586a9-c8e6-4c21-b1fa-75e76b8ddef2" name="Work Queues::Mark Exception" type="Action"><loginhibit onsuccess="true" /><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="150" y="-45" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" friendlyname="Exception Reason" narrative="A description of the reason for the exception" expr="[Item Data.exception]" /><input type="flag" name="Retry" friendlyname="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="" /><input type="flag" name="Keep Locked" friendlyname="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="" /></inputs><outputs><output type="text" name="New Item ID" friendlyname="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="" /></outputs><onsuccess>88c725e8-40fa-44d0-9f83-4d67d2d43e29</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="b9bd903f-f8dd-4da6-a7a9-d213b4392f72" name="Item Data" type="Collection"><display x="240" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage></process></process>
        <process id="c717a9d1-5820-4276-8318-3f4878401831" name="ProcessExceptionsInQueue" xmlns="http://www.blueprism.co.uk/product/process"><process name="ProcessExceptionsInQueue" version="1.0" bpversion="7.3.0.5589" narrative="" byrefcollection="true" processrunningmessage=""><view><camerax>283</camerax><cameray>144</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="075ac01d-d703-4c27-becb-47ccbb08830f" type="Normal" published="False"><name>Process LLM response</name><view><camerax>283</camerax><cameray>102</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a988150-a880-48ca-8322-96a127f86fd8" type="Normal" published="False"><name>LLM-interaction</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="fad5607c-2ab6-41c5-b97a-5955f9c55f5b" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1b5e70f2-23b1-4440-bd7b-0e92055120ed" name="Start" type="Start"><loginhibit /><display x="150" y="-90" /><inputs><input type="text" name="QueueName" stage="QueueName" /></inputs><onsuccess>c388124a-5b64-4bf0-aa72-f244c14a016e</onsuccess></stage><stage stageid="d15ca7d4-e2e9-4fdb-9ae3-fa2632010b4a" name="End" type="End"><loginhibit /><display x="-90" y="375" /></stage><stage stageid="e4f88a89-8c2c-4769-8a76-b757763b4f6e" name="QueueName" type="Data"><display x="0" y="30" w="150" h="60" /><datatype>text</datatype><initialvalue xml:space="preserve">ExceptionTestQueue</initialvalue><private /><alwaysinit /></stage><stage stageid="c388124a-5b64-4bf0-aa72-f244c14a016e" name="Work Queues::Get Exception Items" type="Action"><loginhibit onsuccess="true" /><narrative>Gets the work items from the specified queue which have been marked with an exception on the latest attempt.</narrative><display x="300" y="-90" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to retrieve the exception items from" expr="[QueueName]" /><input type="datetime" name="Start Date" friendlyname="Start Date" narrative="Optionally, the start threshold date. Any items returned will have been marked as an exception after this date. If no value is given, there will be no start threshold." expr="" /><input type="datetime" name="End Date" friendlyname="End Date" narrative="Optionally, the end threshold date. Any items returned will have been marked as an exception before this date. If no value is given, there will be no end threshold." expr="" /><input type="text" name="Key Filter" friendlyname="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" friendlyname="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /><input type="number" name="Maximum Rows" friendlyname="Maximum Rows" narrative="Optionally, the maximum number of rows to return. No value indicates that all rows should be returned" expr="" /><input type="text" name="Resource Name" friendlyname="Resource Name" narrative="Optionally, the name of the resource that worked the exceptioned items" expr="" /></inputs><outputs><output type="collection" name="Exception Items" friendlyname="Exception Items" narrative="The items which were marked with an exception within the given date range, up to the maximum count if one was given" stage="Exception Items" /></outputs><onsuccess>7b59561a-cb46-498c-9934-395040b9e032</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Exception Items" /></stage><stage stageid="7f14ec61-48b1-49f6-8556-0b6e9bcdcee1" name="Exception Items" type="Collection"><display x="300" y="-135" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item ID" type="text" description="The Item ID of the work queue item" displayname="Item ID" /></collectioninfo></stage><stage stageid="7b59561a-cb46-498c-9934-395040b9e032" name="Loop Through Exceptions" type="LoopStart"><loginhibit onsuccess="true" /><display x="300" y="-15" /><onsuccess>f37c9a93-69d6-4b99-abf6-2410982fde82</onsuccess><groupid>259bff9f-1792-45ee-91cb-f90805d64c19</groupid><looptype>ForEach</looptype><loopdata>Exception Items</loopdata></stage><stage stageid="c1efb485-4464-4b71-b4af-1f76182d805c" name="Loop Through Exceptions" type="LoopEnd"><loginhibit onsuccess="true" /><display x="435" y="255" /><onsuccess>2f2e3c48-8808-40a2-b665-a29ee67eb8cd</onsuccess><groupid>259bff9f-1792-45ee-91cb-f90805d64c19</groupid></stage><stage stageid="f37c9a93-69d6-4b99-abf6-2410982fde82" name="GetItem" type="Action"><loginhibit onsuccess="true" /><narrative>Get data relating to an item in a queue. You do not need to have a lock on the item to do this.</narrative><display x="435" y="-15" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to get data from. An error will be raised if this item does not exist." expr="[Exception Items.Item ID]" /></inputs><outputs><output type="text" name="Key" friendlyname="Key" narrative="The key value of the item." stage="" /><output type="number" name="Priority" friendlyname="Priority" narrative="The priority of the item" stage="" /><output type="text" name="Status" friendlyname="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" friendlyname="Attempts" narrative="The number of attempts already made to work this item." stage="Attempts" /><output type="timespan" name="Worktime" friendlyname="Worktime" narrative="The total time spent on this item (including previous attempts)" stage="" /><output type="timespan" name="Attempt Worktime" friendlyname="Attempt Worktime" narrative="The amount of time spent on this particular attempt of the item" stage="" /><output type="datetime" name="Loaded DateTime" friendlyname="Loaded DateTime" narrative="The date and time at which this item was first loaded into the queue." stage="" /><output type="datetime" name="Deferred DateTime" friendlyname="Deferred DateTime" narrative="The date and time at which this item has been deferred to. Empty if this item has not been deferred." stage="" /><output type="datetime" name="Completed DateTime" friendlyname="Completed DateTime" narrative="The date and time at which this item was marked as complete. Empty if this item has not been marked as complete" stage="" /><output type="datetime" name="Exception DateTime" friendlyname="Exception DateTime" narrative="The date and time at which this item was marked as an exception. Empty if there has never been an exception on this item." stage="" /><output type="text" name="Exception Reason" friendlyname="Exception Reason" narrative="The exception reason recorded against this item." stage="Exception Reason" /><output type="text" name="Tags" friendlyname="Tags" narrative="The semi-colon separated set of tags which apply to the item. " stage="Tags" /><output type="collection" name="Data" friendlyname="Data" narrative="The data associated with the item - a single collection row." stage="Data" /></outputs><onsuccess>dc8cedc7-b0a3-4210-b582-0d76d3bf1692</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Item Data" /></stage><stage stageid="a3a5c28d-e00a-4251-9b8e-904377070f6d" name="Exception Reason" type="Data"><display x="510" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="06c90a4f-d710-46d2-8bdc-7b7c1adf6577" name="Tags" type="Data"><display x="585" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2c6c5387-2e57-42d8-bbd7-777c19d01e25" name="Data" type="Collection"><display x="435" y="-60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="de1710fe-1b2d-4826-83ed-d933d65e4285" name="Attempts" type="Data"><display x="660" y="-60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16047147-cc66-46b5-81c7-1519ea72639a" name="LLM-interaction" type="SubSheetInfo"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a4bd8641-533a-4ba0-affc-b8a79f7aa842" name="Start" type="Start"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><display x="15" y="-105" /><inputs><input type="text" name="Input" stage="Input" /></inputs><onsuccess>257656d8-932a-434b-848c-d3bb21f1cedd</onsuccess></stage><stage stageid="05a33343-a4eb-430f-a775-cc1ad400aa20" name="End" type="End"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><display x="15" y="90" /><outputs><output type="text" name="output" stage="output" /></outputs></stage><stage stageid="2f2e3c48-8808-40a2-b665-a29ee67eb8cd" name="LLM-interaction" type="SubSheet"><loginhibit onsuccess="true" /><display x="195" y="255" /><inputs><input type="text" name="Input" friendlyname="Input" expr="[String Of Exceptions Batch]" /></inputs><outputs><output type="text" name="output" friendlyname="output" stage="output" /></outputs><onsuccess>1bec488c-3a38-4306-9c8b-c58e5ff38df8</onsuccess><processid>3a988150-a880-48ca-8322-96a127f86fd8</processid></stage><stage stageid="c9eae065-94c2-4b2f-9c76-a96bf7dfcb75" name="Input" type="Data"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">HI</initialvalue><private /><alwaysinit /></stage><stage stageid="a7dba7da-17dd-4fdb-bf06-4abf4e6f3d46" name="output" type="Data"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><display x="210" y="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="257656d8-932a-434b-848c-d3bb21f1cedd" name="LLM Browser Python::Get_LLM_Response" type="Action"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><inputs><input type="text" name="input" friendlyname="input" expr="[Input]" /></inputs><outputs><output type="text" name="Response Content" friendlyname="Response Content" stage="output" /><output type="text" name="HTTP Status Code" friendlyname="HTTP Status Code" stage="HTTP Status Code" /><output type="collection" name="Response Headers" friendlyname="Response Headers" stage="Response Headers" /></outputs><onsuccess>a5f2eb7e-1df9-4c8a-a7e7-36dafcd7f5c7</onsuccess><resource object="LLM Browser Python" action="Get_LLM_Response" /></stage><stage stageid="a283f0d5-05ff-47b3-a71d-dbc20a432f86" name="Response Headers" type="Collection"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><display x="285" y="-15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a6ac760c-2d80-468a-a092-76cb73105a2d" name="HTTP Status Code" type="Data"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><display x="180" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70f0b818-328d-4030-95d6-2bfb2608d7ef" name="output" type="Data"><display x="210" y="210" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a5f2eb7e-1df9-4c8a-a7e7-36dafcd7f5c7" name="remove chars" type="MultipleCalculation"><subsheetid>3a988150-a880-48ca-8322-96a127f86fd8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /><onsuccess>05a33343-a4eb-430f-a775-cc1ad400aa20</onsuccess><steps><calculation expression="Replace([output], &quot;\n&quot;, &quot;&quot;)" stage="output" /><calculation expression="Replace([output], &quot;\&quot;, &quot;&quot;)" stage="output" /></steps></stage><stage stageid="1bec488c-3a38-4306-9c8b-c58e5ff38df8" name="Json to collection" type="Action"><loginhibit onsuccess="true" /><display x="195" y="375" /><inputs><input type="text" name="json" friendlyname="json" expr="[output]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="LLMResponseCollection" /></outputs><onsuccess>166777b6-2922-45cd-a045-9889d4618372</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="e38c04df-d664-4cc7-8d19-e98c2378749a" name="LLMResponseCollection" type="Collection"><display x="285" y="375" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b24d6f2e-8256-4c16-8b73-bf9bf8bd8b10" name="String Of Exceptions Batch" type="Data"><loginhibit onsuccess="true" /><display x="525" y="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc8cedc7-b0a3-4210-b582-0d76d3bf1692" name="Concat all exceptions" type="Calculation"><loginhibit onsuccess="true" /><display x="435" y="60" /><onsuccess>5eceb278-44c7-4f10-a15e-74a4dadb7da4</onsuccess><calculation expression="[String Of Exceptions Batch] &amp; &quot;    Start of exception    &quot; &amp; &quot; Queue Name : &quot; &amp; [QueueName] &amp; &quot; ,Item Id : &quot; &amp; [Exception Items.Item ID] &amp; &quot; , Attempts : &quot; &amp; &quot; , Exception Reason : &quot; &amp; [Exception Reason] &amp; &quot;   End of Exception   &quot;" stage="String Of Exceptions Batch" /></stage><stage stageid="8ce9d492-3339-423f-873b-20df2b7d0058" name="Process LLM response" type="SubSheetInfo"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="88d12a12-408d-46ce-b6f8-26dd34a65291" name="Start" type="Start"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="45" y="-165" /><inputs><input type="collection" name="ItemsInError" stage="ItemsInError" /></inputs><onsuccess>15473bf5-9dd3-475c-a049-0a148afced49</onsuccess></stage><stage stageid="3df386e6-7e45-417b-8c5d-1c84f66a46fa" name="End" type="End"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="45" y="270" /></stage><stage stageid="166777b6-2922-45cd-a045-9889d4618372" name="Process LLM response" type="SubSheet"><loginhibit onsuccess="true" /><display x="75" y="375" /><inputs><input type="collection" name="ItemsInError" friendlyname="ItemsInError" expr="[LLMResponseCollection]" /></inputs><onsuccess>d15ca7d4-e2e9-4fdb-9ae3-fa2632010b4a</onsuccess><processid>075ac01d-d703-4c27-becb-47ccbb08830f</processid></stage><stage stageid="0fc6e3c3-a2ae-4bb4-b6fd-c3fe2d7d197c" name="Exception Collection" type="Collection"><display x="525" y="180" w="90" h="60" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Item Id" type="text" /><field name="Reason" type="text" /><field name="Tags" type="text" /><field name="Data" type="collection" /><field name="Attempts" type="number" /></collectioninfo></stage><stage stageid="5eceb278-44c7-4f10-a15e-74a4dadb7da4" name="Add to Exception Collections" type="Action"><loginhibit onsuccess="true" /><display x="435" y="135" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Exception Collection&quot;" /></inputs><onsuccess>e99f7b9f-8bbc-4c58-8908-b320c7296d38</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="e99f7b9f-8bbc-4c58-8908-b320c7296d38" name="Copy to Added Row" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="435" y="195" /><onsuccess>c1efb485-4464-4b71-b4af-1f76182d805c</onsuccess><steps><calculation expression="[Exception Items.Item ID]" stage="Exception Collection.Item Id" /><calculation expression="[Exception Reason]" stage="Exception Collection.Reason" /><calculation expression="[Tags]" stage="Exception Collection.Tags" /><calculation expression="[Data]" stage="Exception Collection.Data" /><calculation expression="[Attempts]" stage="Exception Collection.Attempts" /></steps></stage><stage stageid="361b8c9f-cbd0-44b6-bbff-0a0c134d114a" name="Get From Queue" type="Block"><loginhibit onsuccess="true" /><display x="375" y="-120" w="390" h="135" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a03be46e-d87c-463d-8329-f52cfc92ef1a" name="Create collection and inputs" type="Block"><loginhibit onsuccess="true" /><display x="345" y="30" w="240" h="195" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="f8cc8147-3a4c-4a53-b093-96396ba4513c" name="LLM" type="Block"><loginhibit onsuccess="true" /><display x="105" y="180" w="225" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="a18fd7a6-7baa-4cfd-9cf7-e496ef938ea6" name="Convert LLM JSON To JArray Collection" type="Block"><loginhibit onsuccess="true" /><display x="120" y="330" w="240" h="75" /><font family="Segoe UI" size="10" style="Regular" color="33CCCC" /></stage><stage stageid="6d1cc88d-c07a-4097-951d-251726cd1db0" name="ItemsInError" type="Collection"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="150" y="-165" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="15473bf5-9dd3-475c-a049-0a148afced49" name="Loop Start1" type="LoopStart"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><display x="45" y="-45" /><onsuccess>0ca22040-c8e4-4a3f-9c56-08d75e88daf6</onsuccess><groupid>35a27d52-9fb9-4ef8-9e17-1a0a18db60b1</groupid><looptype>ForEach</looptype><loopdata>ItemsInError</loopdata></stage><stage stageid="2a5f6ef6-fa7b-450e-9ed1-f4673030a803" name="Loop End1" type="LoopEnd"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><display x="630" y="270" /><onsuccess>3df386e6-7e45-417b-8c5d-1c84f66a46fa</onsuccess><groupid>35a27d52-9fb9-4ef8-9e17-1a0a18db60b1</groupid></stage><stage stageid="88cf0ff4-bdf8-4fea-925c-b6635ddaac46" name="AddToQ_DontDefer" type="Action"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="570" y="-45" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[ItemsInError.JSON:Array.Queuename]" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="&quot;retry&quot;" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Data]" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="[Tags]" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr=""><validator type="BluePrism.AutomateProcessCore.RangeParameterValidation" parameter="0:25000" /></input></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="newItemID" /></outputs><onsuccess>452646dc-a9e6-4131-bd49-b58454742a24</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="0ca22040-c8e4-4a3f-9c56-08d75e88daf6" name="ChoiceAction" type="ChoiceStart"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="45" y="15" /><groupid>638cded8-38e1-4371-9a0c-fb5f27f80e58</groupid><choices><choice expression="[ItemsInError.JSON:Array.action] = &quot;retry&quot;"><name>RetryDeferNone</name><distance>40</distance><ontrue>2c221606-e91a-46d4-8fa3-98c01f3f52f1</ontrue></choice><choice expression="[ItemsInError.JSON:Array.action] = &quot;email&quot;"><name>email</name><distance>80</distance><ontrue>fcda5bc2-3f70-478c-b1b9-1c039bb27ced</ontrue></choice></choices></stage><stage stageid="aa37383a-9838-4d02-97cb-0c0c0a68529c" name="Otherwise1" type="ChoiceEnd"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="45" y="135" /><onsuccess>3df386e6-7e45-417b-8c5d-1c84f66a46fa</onsuccess><groupid>638cded8-38e1-4371-9a0c-fb5f27f80e58</groupid></stage><stage stageid="452646dc-a9e6-4131-bd49-b58454742a24" name="Anchor1" type="Anchor"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><display x="720" y="150" w="10" h="10" /><onsuccess>2a5f6ef6-fa7b-450e-9ed1-f4673030a803</onsuccess></stage><stage stageid="4e1d8196-5553-472f-b7cb-b41bad4c2dd0" name="GetItemData" type="Action"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><narrative>Get data relating to an item in a queue. You do not need to have a lock on the item to do this.</narrative><display x="420" y="-45" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to get data from. An error will be raised if this item does not exist." expr="[ItemsInError.JSON:Array.itemid]" /></inputs><outputs><output type="collection" name="Data" friendlyname="Data" narrative="The data associated with the item - a single collection row." stage="Data" /><output type="text" name="Status" friendlyname="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" friendlyname="Attempts" narrative="The number of attempts already made to work this item." stage="" /><output type="text" name="Key" friendlyname="Key" narrative="The key value of the item." stage="" /><output type="number" name="Priority" friendlyname="Priority" narrative="The priority of the item" stage="" /><output type="timespan" name="Worktime" friendlyname="Worktime" narrative="The total time spent on this item (including previous attempts)" stage="" /><output type="timespan" name="Attempt Worktime" friendlyname="Attempt Worktime" narrative="The amount of time spent on this particular attempt of the item" stage="" /><output type="datetime" name="Loaded DateTime" friendlyname="Loaded DateTime" narrative="The date and time at which this item was first loaded into the queue." stage="" /><output type="datetime" name="Deferred DateTime" friendlyname="Deferred DateTime" narrative="The date and time at which this item has been deferred to. Empty if this item has not been deferred." stage="" /><output type="datetime" name="Completed DateTime" friendlyname="Completed DateTime" narrative="The date and time at which this item was marked as complete. Empty if this item has not been marked as complete" stage="" /><output type="datetime" name="Exception DateTime" friendlyname="Exception DateTime" narrative="The date and time at which this item was marked as an exception. Empty if there has never been an exception on this item." stage="" /><output type="text" name="Exception Reason" friendlyname="Exception Reason" narrative="The exception reason recorded against this item." stage="" /><output type="text" name="Tags" friendlyname="Tags" narrative="The semi-colon separated set of tags which apply to the item. " stage="Tags" /></outputs><onsuccess>88cf0ff4-bdf8-4fea-925c-b6635ddaac46</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Item Data" /></stage><stage stageid="4613b63c-8678-4f3f-9dd3-c271adbee85e" name="Data" type="Collection"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="435" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="81a04a22-bb8f-48d9-904d-dcccac04012b" name="Tags" type="Data"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="525" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b8db5749-0672-4603-9135-ed4fa012019e" name="newItemID" type="Collection"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="645" y="15" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item ID" type="text" description="The Item ID of the work queue item" displayname="Item IDs" /></collectioninfo></stage><stage stageid="134d63fe-4915-4b9f-97a8-203fdccf8a72" name="AddToQ_Defer" type="Action"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="540" y="45" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[ItemsInError.JSON:Array.Queuename]" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="&quot;retry&quot;" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="ToDateTime([ItemsInError.JSON:Array.defertime])" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Data]" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="[Tags]" /><input type="number" name="Batch Size" friendlyname="Batch Size" narrative="Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000." expr=""><validator type="BluePrism.AutomateProcessCore.RangeParameterValidation" parameter="0:25000" /></input></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="newItemID" /></outputs><onsuccess>452646dc-a9e6-4131-bd49-b58454742a24</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="848e0329-f918-436a-9216-b8cbdf391b1f" name="GetItemData" type="Action"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><narrative>Get data relating to an item in a queue. You do not need to have a lock on the item to do this.</narrative><display x="420" y="15" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to get data from. An error will be raised if this item does not exist." expr="[ItemsInError.JSON:Array.itemid]" /></inputs><outputs><output type="collection" name="Data" friendlyname="Data" narrative="The data associated with the item - a single collection row." stage="Data" /><output type="text" name="Status" friendlyname="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" friendlyname="Attempts" narrative="The number of attempts already made to work this item." stage="" /><output type="text" name="Key" friendlyname="Key" narrative="The key value of the item." stage="" /><output type="number" name="Priority" friendlyname="Priority" narrative="The priority of the item" stage="" /><output type="timespan" name="Worktime" friendlyname="Worktime" narrative="The total time spent on this item (including previous attempts)" stage="" /><output type="timespan" name="Attempt Worktime" friendlyname="Attempt Worktime" narrative="The amount of time spent on this particular attempt of the item" stage="" /><output type="datetime" name="Loaded DateTime" friendlyname="Loaded DateTime" narrative="The date and time at which this item was first loaded into the queue." stage="" /><output type="datetime" name="Deferred DateTime" friendlyname="Deferred DateTime" narrative="The date and time at which this item has been deferred to. Empty if this item has not been deferred." stage="" /><output type="datetime" name="Completed DateTime" friendlyname="Completed DateTime" narrative="The date and time at which this item was marked as complete. Empty if this item has not been marked as complete" stage="" /><output type="datetime" name="Exception DateTime" friendlyname="Exception DateTime" narrative="The date and time at which this item was marked as an exception. Empty if there has never been an exception on this item." stage="" /><output type="text" name="Exception Reason" friendlyname="Exception Reason" narrative="The exception reason recorded against this item." stage="" /><output type="text" name="Tags" friendlyname="Tags" narrative="The semi-colon separated set of tags which apply to the item. " stage="Tags" /></outputs><onsuccess>134d63fe-4915-4b9f-97a8-203fdccf8a72</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Item Data" /></stage><stage stageid="2c221606-e91a-46d4-8fa3-98c01f3f52f1" name="ChoiceRetry" type="ChoiceStart"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="285" y="-90" /><groupid>7097259e-d512-46d6-bdd4-dc1de4e1868a</groupid><choices><choice expression="[ItemsInError.JSON:Array.defertime] = &quot;none&quot;"><name>DeferTimeisNone</name><distance>35</distance><ontrue>4e1d8196-5553-472f-b7cb-b41bad4c2dd0</ontrue></choice><choice expression="[ItemsInError.JSON:Array.defertime] &lt;&gt; &quot;none&quot;"><name>DeferTimeisPresent</name><distance>60</distance><ontrue>848e0329-f918-436a-9216-b8cbdf391b1f</ontrue></choice></choices></stage><stage stageid="faed8535-2fb7-4070-8374-3738ebf8eed4" name="Otherwise2" type="ChoiceEnd"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="285" y="30" /><onsuccess>452646dc-a9e6-4131-bd49-b58454742a24</onsuccess><groupid>7097259e-d512-46d6-bdd4-dc1de4e1868a</groupid></stage><stage stageid="d3fc65ce-9c18-4649-92a7-d62515108298" name="Emails" type="Collection"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><display x="450" y="195" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="emailid" type="text" /><field name="subject" type="text" /><field name="body" type="text" /></collectioninfo></stage><stage stageid="fcda5bc2-3f70-478c-b1b9-1c039bb27ced" name="Collections::Add Row" type="Action"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><display x="270" y="135" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Emails&quot;" /></inputs><onsuccess>a761422b-1ddf-402d-9ccd-5ba948bfa631</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="a761422b-1ddf-402d-9ccd-5ba948bfa631" name="Copy Email Values" type="MultipleCalculation"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><display x="435" y="135" /><onsuccess>452646dc-a9e6-4131-bd49-b58454742a24</onsuccess><steps><calculation expression="[ItemsInError.JSON:Array.emailId]" stage="Emails.emailid" /><calculation expression=" [ItemsInError.JSON:Array.subjectline]" stage="Emails.subject" /><calculation expression="[ItemsInError.JSON:Array.body]" stage="Emails.body" /></steps></stage><stage stageid="ba660de9-f40f-4696-9a04-9938391b3176" name="Block1" type="Block"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit onsuccess="true" /><display x="210" y="-135" w="465" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d758d1a5-fab6-4655-a5f1-fe50751c5392" name="Recover1" type="Recover"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit /><display x="615" y="-105" /><onsuccess>3117d40d-0205-46c7-81cc-7774d75f9dad</onsuccess></stage><stage stageid="3117d40d-0205-46c7-81cc-7774d75f9dad" name="Resume1" type="Resume"><subsheetid>075ac01d-d703-4c27-becb-47ccbb08830f</subsheetid><loginhibit /><display x="810" y="-105" /><onsuccess>452646dc-a9e6-4131-bd49-b58454742a24</onsuccess></stage></process></process>
        <process id="993ea470-c53b-4d8f-8554-693c19f0cb7f" name="ThrowException" published="true" xmlns="http://www.blueprism.co.uk/product/process"><process name="ThrowException" version="1.0" bpversion="7.3.0.5589" narrative="" byrefcollection="true" processrunningmessage=""><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><stage stageid="02a86937-56cb-43f4-abe7-fedd898e5ba4" name="Start" type="Start"><display x="15" y="-105" /><onsuccess>6273a42d-2216-4d06-acac-100deda0b785</onsuccess></stage><stage stageid="49bfbbdb-bf35-45ac-a5a2-fb0247756639" name="End" type="End"><display x="15" y="90" /></stage><stage stageid="eadbf618-9050-417e-b0b1-632ed490a4b2" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6273a42d-2216-4d06-acac-100deda0b785" name="System Exception" type="Exception"><display x="180" y="15" /><exception localized="yes" type="System Exception" detail="&quot;System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.&#xA;at System.Threading.Thread.StartInternal(IPrincipal principal, StackCrawlMark&amp; stackMark)&#xA;at System.Threading.Thread.Start(StackCrawlMark&amp; stackMark)&#xA;at System.Threading.Thread.Start()&#xA;at BluePrism.AutomateAppCore.clsResourceConnection.ReviveConnection()&#xA;at BluePrism.AutomateAppCore.clsResourceConnection..ctor(Guid gID, String sName, ResourceDBStatus dbStatus, ResourceAttributes attrs, clsResourceConnectionManager parent)&#xA;at BluePrism.AutomateAppCore.clsResourceConnectionManager.GetLatestDBResourceInfo()&#xA;at BluePrism.AutomateAppCore.clsResourceConnectionManager..ctor(Modes mode, Guid userId, Guid poolid, Guid controllerid)&#xA;at Automate.frmApplication.PerformPostLoginActions()&#xA;at Automate.ctlSingleSignon.BackgroundWorker_RunWorkerCompleted(Object sender, RunWorkerCompletedEventArgs e)&#xA;at System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(RunWorkerCompletedEventArgs e)&#xA;at System.ComponentModel.BackgroundWorker.AsyncOperationCompleted(Object arg)&#xA;&#xA;&#xA;************** Loaded Assemblies **************&#xA;mscorlib&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/Windows/Microsoft.NET/Framework/v4.0.30319/mscorlib.dll&#xA;----------------------------------------&#xA;Automate&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version: 5.0.12.0&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/Automate.exe&#xA;----------------------------------------&#xA;AutomateAppCore&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/AutomateAppCore.DLL&#xA;----------------------------------------&#xA;System.Windows.Forms&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System.Windows.Forms/v4.0_4.0.0.0__b77a5c561934e089/System.Windows.Forms.dll&#xA;----------------------------------------&#xA;System&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System/v4.0_4.0.0.0__b77a5c561934e089/System.dll&#xA;----------------------------------------&#xA;System.Drawing&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version: 4.6.1590.0 built by: NETFXREL2&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System.Drawing/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Drawing.dll&#xA;----------------------------------------&#xA;Microsoft.VisualBasic&#xA;Assembly Version: 10.0.0.0&#xA;Win32 Version: 14.6.1590.0 built by: NETFXREL2&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/Microsoft.VisualBasic/v4.0_10.0.0.0__b03f5f7f11d50a3a/Microsoft.VisualBasic.dll&#xA;----------------------------------------&#xA;System.Core&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System.Core/v4.0_4.0.0.0__b77a5c561934e089/System.Core.dll&#xA;----------------------------------------&#xA;AutomateProcessCore&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version: 5.0.12.0&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/AutomateProcessCore.DLL&#xA;----------------------------------------&#xA;AutomateControls&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/AutomateControls.DLL&#xA;----------------------------------------&#xA;BPCoreLib&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version: 5.0.12&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/BPCoreLib.DLL&#xA;----------------------------------------&#xA;System.Xml&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System.Xml/v4.0_4.0.0.0__b77a5c561934e089/System.Xml.dll&#xA;----------------------------------------&#xA;System.Runtime.Remoting&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version: 4.7.2114.0 built by: NET47REL1LAST&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System.Runtime.Remoting/v4.0_4.0.0.0__b77a5c561934e089/System.Runtime.Remoting.dll&#xA;----------------------------------------&#xA;System.Configuration&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version: 4.6.1590.0 built by: NETFXREL2&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System.Configuration/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Configuration.dll&#xA;----------------------------------------&#xA;CharMatching&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version: 5.0.12&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/CharMatching.DLL&#xA;----------------------------------------&#xA;AMI&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version: 5.0.12.0&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/AMI.DLL&#xA;----------------------------------------&#xA;PresentationCore&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_32/PresentationCore/v4.0_4.0.0.0__31bf3856ad364e35/PresentationCore.dll&#xA;----------------------------------------&#xA;WindowsBase&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/WindowsBase/v4.0_4.0.0.0__31bf3856ad364e35/WindowsBase.dll&#xA;----------------------------------------&#xA;ApplicationManagerUtilities&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version: 5.0.12&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/ApplicationManagerUtilities.DLL&#xA;----------------------------------------&#xA;BluePrism.Images&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version:&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/BluePrism.Images.DLL&#xA;----------------------------------------&#xA;System.Data&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version: 4.6.1636.0 built by: NETFXREL3STAGE&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_32/System.Data/v4.0_4.0.0.0__b77a5c561934e089/System.Data.dll&#xA;----------------------------------------&#xA;AutomateConfig&#xA;Assembly Version: 5.0.12.0&#xA;Win32 Version: 5.0.12&#xA;CodeBase: file:///C:/Program%20Files/Blue%20Prism%20Limited/Blue%20Prism%20Automate/AutomateConfig.EXE&#xA;----------------------------------------&#xA;System.Security&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version: 4.7.2650.0 built by: NET471REL1LAST_B&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System.Security/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Security.dll&#xA;----------------------------------------&#xA;System.Numerics&#xA;Assembly Version: 4.0.0.0&#xA;Win32 Version: 4.6.1590.0 built by: NETFXREL2&#xA;CodeBase: file:///C:/windows/Microsoft.Net/assembly/GAC_MSIL/System.Numerics/v4.0_4.0.0.0__b77a5c561934e089/System.Numerics.dll&quot;" /></stage></process></process>
        <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" name="Utility - JSON" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - JSON" version="6.9.0.26970" bpversion="7.3.0.5589" narrative="An object for parsing JSON into a collection and turning a collection into JSON." byrefcollection="true" processrunningmessage="" type="object" runmode="Background"><appdef><element name="Application Root"><id>8f20ac0c-296f-43c3-b0d9-59b5b2b7da1c</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="6a9ccb5a-8cc3-44ac-b343-39680558062f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="560472b9-cea4-41d5-bc36-c49d6c1b26e6" type="Normal" published="True"><name>Collection to JSON</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5aeb4cb-cd25-4535-b3be-b46681b4e6b6" type="Normal" published="True"><name>JSON to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e53062c7-68de-4763-b37a-456688d0d607" type="Normal" published="True"><name>JSON to Collection (skipping JArray)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1c04dc1d-81e9-47e9-a8c4-b46dd19b2624" type="Normal" published="True"><name>JsonPath</name><view><camerax>0</camerax><cameray>-9</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cbbe7eb7-53d6-49a6-9f88-cb3a26c334df" type="Normal" published="True"><name>JsonPath - Return Collection</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="222ee4c2-914e-4b2b-8e13-443c1c76b3dd" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>ff6524a3-da73-439c-a4ba-2aabb994009c</onsuccess></stage><stage stageid="ff6524a3-da73-439c-a4ba-2aabb994009c" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="7fd071f3-6769-4dd5-95cf-a911c73c42ff" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Core.dll</reference><reference>System.dll</reference></references><imports><import>System.Data</import><import>System.Drawing</import><import>Newtonsoft.Json</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.IO</import><import>System</import><import>Newtonsoft.Json.Linq</import><import>System.Collections</import><import>System.Linq</import><import>System.Collections</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[//**********************************************************************************************
// NEW CODE
// This code is used by the 'JSON To Collection (Skipping Array)' action. It is based on 
// opensource code developed by Tobias Arnold and released under MIT License. The original 
// source code can be found at the following GitHub link: 
// 
// 		https://github.com/toarnold/Coremoran.BluePrism.Json. 
//
// To contact Tobias, please refer to his LinkedIn profile: 
// 
// 		https://www.linkedin.com/in/tobias-arnold-492368155/  
//**********************************************************************************************
static bool IsSingleRowNew(DataTable table)
{
	return Convert.ToBoolean(table.ExtendedProperties[SpecialValues.SingleRowPropertyName] ?? false);
}

static void SetSingleRow(DataTable table, bool singleRow)
{
	table.ExtendedProperties[SpecialValues.SingleRowPropertyName] = singleRow;
}

public static class BluePrismConverter
{
	public static DataTable ObjectToCollection(object o)
	{
		return JsonToCollection(JsonConvert.SerializeObject(o,
				new DataTableConverter(),
				new GroupingConverter(),
				new DataRowConverter()
		));
	}

	public static DataTable JsonToCollection(string json)
	{
		return (DataTable)JsonConvert.DeserializeObject(json, typeof(DataTable), new JsonSerializerSettings
		{
			Converters = new JsonConverter[]
			{
				new DataTableConverter(),
				new DataRowConverter()
			},
			DateTimeZoneHandling = DateTimeZoneHandling.Unspecified
		});
	}

	public static string CollectionToJson(DataTable table)
	{
		return JsonConvert.SerializeObject(table,
				new DataTableConverter(),
				new DataRowConverter());
	}

	public static JArray CollectionToJArray(DataTable table)
	{
		var serializer = JsonSerializer.Create(new JsonSerializerSettings()
		{
			Converters = new JsonConverter[] {
				new DataTableConverter(),
				new DataRowConverter() }
		});
		return JArray.FromObject(table, serializer);
	}
}

internal class DataRowConverter : JsonConverter
{
	public override bool CanConvert(Type objectType) => objectType == typeof(DataRow);

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		if (reader.TokenType != JsonToken.StartObject)
		{
			throw new Exception("Unsupported JsonToken " + reader.TokenType.ToString());
		}

		var dt = new DataTable();
		SetSingleRow(dt, true);
		dt.Rows.Add();
		string currentColumnName = null;
		while (reader.Read() && reader.TokenType != JsonToken.EndObject)
		{
			switch (reader.TokenType)
			{
				case JsonToken.PropertyName:
					currentColumnName = reader.Value.ToString();
					break;
				default:
					DataTableRowHandler.HandleJsonData(dt, currentColumnName, serializer, reader);
					break;
			}
		}
		return dt.Rows[0];
	}

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		var dataRow = (DataRow)value;
		var dataTable = dataRow.Table;
		if (dataTable.Columns.Count == 1
			&& dataTable.Columns[0].ColumnName == SpecialValues.JsonUnnamedValue 
			&& (!IsSingleRowNew(dataTable) || writer.Path == string.Empty))
		{
			// First (and single!) element
			serializer.Serialize(writer, dataRow[0]); 
		}
		else
		{
			serializer.Serialize(writer, dataTable.Columns.Cast<DataColumn>().ToDictionary(k => k.ColumnName, v => dataRow[v]));
		}
	}
}

internal class DataTableConverter : JsonConverter
{
	public override bool CanConvert(Type objectType) => objectType == typeof(DataTable);

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		var dt = (DataTable)value;
		if (IsSingleRowNew(dt))
		{
			serializer.Serialize(writer, dt.Rows[0]);
		}
		else
		{
			serializer.Serialize(writer, dt.Select());
		}
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		var dt = new DataTable();
		switch (reader.TokenType)
		{
			case JsonToken.StartObject:
				dt = serializer.Deserialize<DataRow>(reader).Table;
				break;
			case JsonToken.StartArray:
				SetSingleRow(dt, false);
				var nullColumns = new HashSet<string>();
				while (reader.Read() && reader.TokenType != JsonToken.EndArray)
				{
					switch (reader.TokenType)
					{
						case JsonToken.Null:
							dt.Rows.Add();
							break;
						case JsonToken.StartObject:
							var tempTable = serializer.Deserialize<DataRow>(reader).Table;
							var nulls = tempTable.Columns.Cast<DataColumn>().Where(w => tempTable.Rows[0].IsNull(w.ColumnName)).Select(s => s.ColumnName).ToList();
							nulls.ForEach(n => tempTable.Columns.Remove(n));
							nullColumns.UnionWith(nulls);
							dt.Merge(tempTable, true, MissingSchemaAction.Add);
							break;
						default:
							DataTableRowHandler.HandleJsonData(dt, null, serializer, reader);
							break;
					}
				}
				// Add not set Null-Columns
				dt.Columns.AddRange(nullColumns.Where(w => !dt.Columns.Contains(w)).Select(s => new DataColumn(s)).ToArray());
				break;
			default: /* Try to append a single value */
				if (reader.TokenType != JsonToken.Null)
				{
					SetSingleRow(dt, true);
					dt.Rows.Add();
					DataTableRowHandler.HandleJsonData(dt, null, serializer, reader);
				}
				break;
		}
		return dt;
	}
}

internal static class DataTableRowHandler
{
	private static void AppendArrayItem(DataTable table, Type colType, string colName, object value)
	{
		if (!table.Columns.Contains(colName))
		{
			var newcolumn = new DataColumn(colName, colType); 
			if (colType == typeof(DateTime))
			{
				newcolumn.DateTimeMode = DataSetDateTime.Utc;
			}
			table.Columns.Add(newcolumn);
		}
		if (IsSingleRowNew(table))
		{
			table.Rows[0][colName] = value;
		}
		else
		{
			var newRow = table.NewRow();
			newRow[colName] = value;
			table.Rows.Add(newRow);
		}
	}

	internal static void HandleJsonData(DataTable table, string currentColumnName, JsonSerializer serializer, JsonReader reader)
	{
		switch (reader.TokenType)
		{
			case JsonToken.String:
			case JsonToken.Null:
				AppendArrayItem(table, typeof(string), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Integer:
			case JsonToken.Float:
				AppendArrayItem(table, typeof(decimal), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Boolean:
				AppendArrayItem(table, typeof(bool), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Date:
				AppendArrayItem(table, typeof(DateTime), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.StartObject:
				AppendArrayItem(table, typeof(DataTable), currentColumnName ?? SpecialValues.JsonUnnamedValue, serializer.Deserialize<DataTable>(reader));
				break;
			case JsonToken.StartArray:
				AppendArrayItem(table, typeof(DataTable), currentColumnName ?? SpecialValues.JsonUnnamedValue, serializer.Deserialize<DataTable>(reader));
				break;
			default:
				throw new Exception("Unsupported JsonToken " + reader.TokenType.ToString());
		}
	}
}

internal class GroupingConverter : JsonConverter
{
	public override bool CanRead => false;

	public override bool CanConvert(Type objectType) => objectType.GetInterfaces().Any(a => a.IsGenericType && a.GetGenericTypeDefinition() == typeof(IGrouping<,>));

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) => throw new NotImplementedException();

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		// Get key object with reflection
		var keyInfo = value.GetType().GetProperty("Key");
		var key = JToken.FromObject(keyInfo.GetValue(value));

		var data = key is JObject obj ? obj : new JObject { { SpecialValues.GroupingSingleKeyColumnName, key } };
		data.Add(SpecialValues.GroupingGroupColumnName, JArray.FromObject(((IEnumerable<object>)value).Select(x => x), serializer));

		serializer.Serialize(writer, data);
	}
}

public class SpecialValues
{
	public const string JsonUnnamedValue = "JSON_Unnamed_Value";
	public const string SingleRowPropertyName = "SingleRow";
	public const string GroupingSingleKeyColumnName = "Key";
	public const string GroupingGroupColumnName = "Group";
}

//**********************************************************************************************
// LEGACY CODE
// This is the original code of the Utility - JSON VBO. This code is used by the 
// 'JSON To Collection' and 'Collection To JSON' actions.
//**********************************************************************************************
private bool mUseNewParseMethod = false;

private class JSON
{
	public const string Array = "JSON:Array";
	public const string Null = "JSON:Null";
}

public string ConvertToJSON(DataTable dt)
{
	object o = SerialiseGeneric(dt, true);
	return JsonConvert.SerializeObject(o);
}

public object SerialiseGeneric(object o, bool removeArray)
{
	DataTable dt = o as DataTable;
	if (dt != null)
		return SerialiseDataTable(dt);

	DataRow dr = o as DataRow;
	if (dr != null)
		return SerialiseDataRow(dr, removeArray);

	string s = o as string;
	if (s != null && s == JSON.Null)
		return null;

	if (o != null)
		return o;

	return null;
}

public object SerialiseDataTable(DataTable dt)
{
	if (IsSingleRow(dt))
		return SerialiseGeneric(dt.Rows[0], false);
	else
	{
		JArray ja = new JArray();
		foreach (DataRow r in dt.Rows)
			ja.Add(SerialiseGeneric(r, true));
		return ja;
	}
}

public bool IsSingleRow(DataTable dt)
{
	if (dt.ExtendedProperties.Contains("SingleRow"))
		return System.Convert.ToBoolean(dt.ExtendedProperties["SingleRow"]);
	// Fallback for older versions of blueprism
	return dt.Rows.Count == 1;
}

public object SerialiseDataRow(DataRow dr, bool removeArray)
{
	JObject jo = new JObject();
	foreach (DataColumn c in dr.Table.Columns)
	{
		string s = c.ColumnName;
		if (removeArray && s == JSON.Array)
			return SerialiseGeneric(dr[s], true);
		jo[s] = JToken.FromObject(SerialiseGeneric(dr[s], false));
	}
	return jo;
}

public DataTable ConvertToDataTable(string json)
{
	object o = JsonConvert.DeserializeObject(json);
	return (DataTable)DeserialiseGeneric(o, true);
}

private object DeserialiseGeneric(object o, bool populate)
{
	JArray a = o as JArray;
	if (a != null)
		return mUseNewParseMethod ? DeserialiseArrayWithoutJArray(a, populate) : DeserialiseArray(a, populate);

	JObject jo = o as JObject;
	if (jo != null)
		return DeserialiseObject(jo, populate);

	JValue jv = o as JValue;
	if (jv != null)
		return jv.Value;

	return JSON.Null;
}

private string GetKey(KeyValuePair<string, JToken> kv)
{
	if (kv.Key != null)
		return kv.Key.ToString();
	return "";
}


private DataTable DeserialiseObject(JObject o, bool populate)
{
	DataTable dt = new DataTable();

	foreach (KeyValuePair<string, JToken> kv in o)
	{
		Type type = GetTypeOf(DeserialiseGeneric(kv.Value, false));
		dt.Columns.Add(GetKey(kv), type);
	}

	if (populate)
	{
		DataRow dr = dt.NewRow();
		foreach (KeyValuePair<string, JToken> kv in o)
			dr[GetKey(kv)] = DeserialiseGeneric(kv.Value, true);
		dt.Rows.Add(dr);
	}

	return dt;
}

private DataTable DeserialiseArrayWithoutJArray(JArray jarr, bool populate)
{
	DataTable dt = new DataTable();

	Type first = null;
	foreach (object e in jarr)
	{
		if (first == null)
			first = GetTypeOf(DeserialiseGeneric(e, false));
		if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
			throw new Exception("Data Type mismatch in array");
	}

	System.Collections.Specialized.OrderedDictionary columns = new System.Collections.Specialized.OrderedDictionary();
	var allTypesInColumnsMatch = jarr.All(e =>
	{
		if (!(e is JObject))
			return false;
		foreach (KeyValuePair<string, JToken> pair in (JObject)e)
		{
			object val = pair.Value;
			if (val is JValue)
				val = (JValue)(pair.Value);
			var tp = val ?? (object)"".GetType();

			if (columns.Contains(pair.Key))
			{
				if (tp != columns[pair.Key])
					return false;
			}
			else
				columns[pair.Key] = tp;
		}
		return true;
	});

	if (allTypesInColumnsMatch)
	{
		foreach (DictionaryEntry pair in columns)
		{
			string key = System.Convert.ToString(pair.Key);
			Type tp = (Type)pair.Value;
			if (tp == typeof(JObject) || tp == typeof(JArray))
				dt.Columns.Add(key, typeof(DataTable));
			else
				dt.Columns.Add(key, tp);
		}
	}
	else if (first != null)
		dt.Columns.Add(JSON.Array, first);

	if (populate)
	{
		foreach (object e in jarr)
		{
			DataRow dr = dt.NewRow();
			if (allTypesInColumnsMatch)
			{
				foreach (KeyValuePair<string, JToken> pair in (JObject)e)
					dr[pair.Key] = DeserialiseGeneric(pair.Value, true);
			}
			else
				dr[JSON.Array] = DeserialiseGeneric(e, true);

			dt.Rows.Add(dr);
		}
	}

	return dt;
}

private DataTable DeserialiseArray(JArray o, bool populate)
{
	DataTable dt = new DataTable();

	Type first = null;
	foreach (object e in o)
	{
		if (first == null)
			first = GetTypeOf(DeserialiseGeneric(e, false));
		if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
			throw new Exception("Data Type mismatch in array");
	}
	if (first != null)
		dt.Columns.Add(JSON.Array, first);

	if (populate)
	{
		foreach (object e in o)
		{
			DataRow dr = dt.NewRow();
			dr[JSON.Array] = DeserialiseGeneric(e, true);
			dt.Rows.Add(dr);
		}
	}

	return dt;
}

private Type GetTypeOf(object o)
{
	if (o == null)
		return typeof(string);
	return o.GetType();
}

public bool IsNumeric(string value)
{
    return value.All(char.IsNumber);
}]]></code></stage><stage stageid="c290e7f4-b01b-4012-9422-044432a3cc82" name="Clean Up" type="SubSheetInfo"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="662f70f7-7036-462d-b9bf-f35265dd971a" name="Start" type="Start"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>153f4275-2acd-48a5-b6e6-409fcb2441a8</onsuccess></stage><stage stageid="153f4275-2acd-48a5-b6e6-409fcb2441a8" name="End" type="End"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="885aaf30-a216-44c5-975b-ca58ce02f815" name="JSON to Collection" type="SubSheetInfo"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e5625896-d966-4a10-aa39-2e85611f490f" name="Start" type="Start"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>779de445-0658-4a45-a1ef-a38d6de24429</onsuccess></stage><stage stageid="66526e3e-8b9e-4452-9ca8-f70baa9aec4a" name="End" type="End"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="007e04e2-4ed0-4afd-87d3-c06d79f48d86" name="new" type="Note"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="d92fd7fc-b028-457a-a14a-17d66c4b5513" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="779de445-0658-4a45-a1ef-a38d6de24429" name="JSON To Collection" type="Code"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>66526e3e-8b9e-4452-9ca8-f70baa9aec4a</onsuccess><code><![CDATA[result = ConvertToDataTable(json);]]></code></stage><stage stageid="da3984e5-ce52-4649-81c5-a71d452a5ba0" name="json" type="Data"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e93e91c-85e1-4c75-b74c-52d08c0724e6" name="Collection to JSON" type="SubSheetInfo"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c10fccbd-439b-447d-908a-58f20a540146" name="Start" type="Start"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="Data" stage="Data" /></inputs><onsuccess>7923115c-5283-4694-b2c1-142afb4d3788</onsuccess></stage><stage stageid="ede1f653-07f1-42eb-8616-8d2d3dfb5244" name="End" type="End"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="JSON" stage="JSON" /></outputs></stage><stage stageid="8f488472-d2dd-4bbc-a98e-07d6a494ab3f" name="Result" type="Collection"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="75" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7923115c-5283-4694-b2c1-142afb4d3788" name="Collection To JSON" type="Code"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="collection" name="data" expr="[Data]" /></inputs><outputs><output type="text" name="json" stage="JSON" /></outputs><onsuccess>ede1f653-07f1-42eb-8616-8d2d3dfb5244</onsuccess><code><![CDATA[json = ConvertToJSON(data);]]></code></stage><stage stageid="dbeac687-55ba-4b1a-9e9b-1a5f1e763886" name="Data" type="Collection"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-195" y="-15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="60425486-0e54-4004-afef-6ccb7e96828d" name="JSON" type="Data"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><display x="-195" y="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68820997-9906-40ef-b5f3-325f6f0a25b9" name="JSON to Collection (skipping JArray)" type="SubSheetInfo"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="14799289-a9b9-4b93-aeb6-f0240547be63" name="Start" type="Start"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="-120" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>8cb729e4-705c-400b-8d1d-0b54dd51fb94</onsuccess></stage><stage stageid="21187841-67f3-4ed1-a3b0-de763bb1e801" name="End" type="End"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="30" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="8cb729e4-705c-400b-8d1d-0b54dd51fb94" name="JSON To Collection Without JArray" type="Code"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="-45" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>21187841-67f3-4ed1-a3b0-de763bb1e801</onsuccess><code><![CDATA[result = BluePrismConverter.JsonToCollection(json);
]]></code></stage><stage stageid="b3a37b86-f505-4522-80d4-2c9e45ab723c" name="json" type="Data"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98ca8a8f-1ce6-4cb7-85e6-9fff8b1b06f9" name="Result" type="Collection"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="75" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f95350a7-9c25-487f-ad74-c7ce70ea37a5" name="Note2" type="Note"><narrative>© 2023 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="dfa7d330-e791-49c6-b4fb-6011b4d8d6cc" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0.1</narrative><display x="15" y="-165" w="150" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="c07d13ef-4200-4377-8cfd-bd38c06ea923" name="JsonPath" type="SubSheetInfo"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ee1a9752-11e4-4a3f-aae8-3e910b966e9c" name="Start" type="Start"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="-60" /><inputs><input type="text" name="Json" stage="Json" /><input type="text" name="JsonPath" stage="JsonPath" /></inputs><onsuccess>d0ff9ba9-4bf0-4ba4-a9d6-85a5a0935c7e</onsuccess></stage><stage stageid="4b590fe3-4e65-4b28-baa0-8852d218894a" name="End" type="End"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="60" /><outputs><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="TextResult" stage="TextResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="7ae65c44-8e32-406c-ad5b-fa0f802cdabd" name="Json" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6118f7f-6c60-4e0b-9683-f749ae300a06" name="JsonPath" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d0ff9ba9-4bf0-4ba4-a9d6-85a5a0935c7e" name="Process Json - Single Output" type="Code"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><inputs><input type="text" name="Json" expr="[Json]" /><input type="text" name="JsonPath" expr="[JsonPath]" /></inputs><outputs><output type="text" name="TextResult" stage="TextResult" /><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>4b590fe3-4e65-4b28-baa0-8852d218894a</onsuccess><code><![CDATA[// Initialize the output vars as only one will be used.
NumericResult = 0;
TextResult = String.Empty;
ErrorMessage = String.Empty;

String tempResult = string.Empty;

JObject jo;

jo = JObject.Parse(Json);

try
{
	tempResult = (string)jo.SelectToken(JsonPath,true);

	if (IsNumeric(tempResult))
	{
		NumericResult = Decimal.Parse(tempResult);
	}
	else
	{
		TextResult = tempResult;
	}
}
catch (JsonException)
{
	ErrorMessage = "Unable to find value in supplied JSON.";
}






]]></code></stage><stage stageid="8a2694eb-d12b-4cad-87cb-d43651aeb0f2" name="NumericResult" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-165" y="165" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bb1f845-c916-472b-852a-ab9c873bf569" name="TextResult" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-225" y="165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1351cf4-399a-4e58-b568-321f0d3196e5" name="ErrorMessage" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94ab4d76-1378-44d7-bfd9-c4a6eaa1e710" name="JsonPath - Return Collection" type="SubSheetInfo"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f48025fa-9b5d-4675-8147-3478db7860c6" name="Start" type="Start"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="-45" /><inputs><input type="text" name="Json" stage="Json" /><input type="text" name="JsonPath" stage="JsonPath" /></inputs><onsuccess>a0419bd6-afbf-4de4-98ec-5471c207786c</onsuccess></stage><stage stageid="09dc30b8-a6f6-4594-9044-3e15b51f75ef" name="End" type="End"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="135" /><outputs><output type="collection" name="Result" stage="Result" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="be0e5e0e-6e93-4633-8c64-c02b0875b278" name="Json" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba7a4062-02e0-4458-8755-f7a521119277" name="JsonPath" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a0419bd6-afbf-4de4-98ec-5471c207786c" name="JsonPath - Return Object" type="Code"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><narrative>This allows multiple objects to be returned as a Json string.</narrative><display x="-15" y="15" /><inputs><input type="text" name="Json" expr="[Json]" /><input type="text" name="JsonPath" expr="[JsonPath]" /></inputs><outputs><output type="text" name="TextResult" stage="TextResult" /><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>03bbb947-bcd3-4602-802b-f0444d868a92</onsuccess><code><![CDATA[//Initialize the output vars as only one will be used.
NumericResult = 0;
TextResult = String.Empty;
ErrorMessage=String.Empty;

string tempResult = string.Empty;
JToken token;

JObject jo;

jo = JObject.Parse(Json);

try
{
	token = jo.SelectToken(JsonPath, true);
	tempResult = token.ToString();

	TextResult = tempResult;
}
catch (JsonException)
{
	ErrorMessage = "Unable to find value in supplied JSON.";
}





]]></code></stage><stage stageid="b58dff70-5256-4b01-8e97-ed2efcbcbfcd" name="NumericResult" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-225" y="120" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b226d9b3-eff1-427f-8b2e-eb5da2cefb05" name="TextResult" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-165" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60b9ffe8-dee6-4b41-b324-21aeca4ac438" name="ErrorMessage" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03bbb947-bcd3-4602-802b-f0444d868a92" name="JSON to Collection" type="SubSheet"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="75" /><inputs><input type="text" name="json" friendlyname="json" expr="[TextResult]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="Result" /></outputs><onsuccess>09dc30b8-a6f6-4594-9044-3e15b51f75ef</onsuccess><processid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</processid></stage><stage stageid="66ec6cbe-f703-4076-bcf5-5b0e22e41ba3" name="Result" type="Collection"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="255" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="87cac279-7118-48cc-b1d7-3658fc032d77" name="Inputs" type="Block"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="01799449-c645-49c1-8c4f-8986f1b1d742" name="Outputs" type="Block"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="a6c9d22a-d9ca-4915-bc8e-d670af070403" name="Inputs" type="Block"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="382cc03e-2ac0-4ec6-adb9-c3cc75a7ca5e" name="Outputs" type="Block"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="-270" y="45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="7f989a6d-ca7f-4b8e-a295-13d0e8290cf2" name="Inputs" type="Block"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="f366aecb-e6eb-48a8-abe6-7c5815ca65f3" name="Outputs" type="Block"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-270" y="45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="8af65c59-f2d4-4d02-a30a-63b08b35cc7f" name="Inputs" type="Block"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="5d7a75fc-0689-4c1b-b7a8-bcb95fc46ffb" name="Outputs" type="Block"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="52bedb01-d26a-4421-b30a-af904dfd5f10" name="Inputs" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="5e1ed7e6-95cc-4409-9c77-3b4c79d24ac6" name="Outputs" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="921b8f62-3650-4490-a8f4-c38efa72e580" name="Intermediary Values" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FFFF" /></stage></process></object>
        <work-queue id="2" name="ExceptionTestQueue" key-field="id" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <webapiservice id="f6c0f225-aa9a-4514-a39c-54ac6df41499" name="LLM Browser Python" enabled="true" xmlns="http://www.blueprism.co.uk/product/webapiservice">
            <configuration baseurl="http://127.0.0.1:5000" xmlns="">
                <actions>
                    <action id="1" name="Get_LLM_Response" enabled="true" enableRequestOutputParameter="false" disableSendingOfRequest="false">
                        <description><![CDATA[Getting bard response thru browser - python selenium flask]]></description>
                        <request httpmethod="GET" urlpath="/LLM?input=[input]">
                            <headers></headers>
                            <bodycontent type="0" />
                        </request>
                        <parameters>
                            <actionparameter name="input" expose="true" datatype="64">
                                <initialvalue><![CDATA["Testing "]]></initialvalue>
                                <description><![CDATA[]]></description>
                            </actionparameter>
                        </parameters>
                        <outputparameters>
                            <parameters></parameters>
                            <code><![CDATA[]]></code>
                        </outputparameters>
                    </action>
                </actions>
                <commonparameters></commonparameters>
                <commonheaders></commonheaders>
                <commonauthentications>
                    <authentication type="0" />
                </commonauthentications>
                <commoncode>
                    <codeproperties code="" language="visualbasic">
                        <namespaces>
                            <namespace>System</namespace>
                            <namespace>System.Drawing</namespace>
                            <namespace>System.Data</namespace>
                        </namespaces>
                        <references>
                            <reference>System.dll</reference>
                            <reference>System.Data.dll</reference>
                            <reference>System.Xml.dll</reference>
                            <reference>System.Drawing.dll</reference>
                        </references>
                    </codeproperties>
                </commoncode>
                <configurationsettings>
                    <configurationsettings requesttimeout="120" authserverrequesttimeout="10" />
                </configurationsettings>
            </configuration>
        </webapiservice>
        <process-group id="ab1a70ea-8799-4c37-b661-fd645f453ae2" name="AIOps" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="784a202d-bcd7-4825-a7f3-76799f611611" />
                <process id="c717a9d1-5820-4276-8318-3f4878401831" />
                <process id="993ea470-c53b-4d8f-8554-693c19f0cb7f" />
            </members>
        </process-group>
        <object-group id="4656f0d8-6d7a-452b-80b2-55bebe601d6e" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>